name: "Tests"

permissions:
  contents: read
  pull-requests: write
  
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.2"

      - name: Get Dependencies
        run: go get -v ./...
        
      - name: Get Caddy Dependencies
        run: |
          go get github.com/caddyserver/caddy/v2/modules/caddyhttp/templates@v2.9.1
          go get github.com/caddyserver/caddy/v2/modules/caddyhttp/proxyprotocol@v2.9.1
          go get github.com/caddyserver/caddy/v2/modules/caddyhttp/tracing@v2.9.1
          go get github.com/caddyserver/caddy/v2/modules/caddypki/acmeserver@v2.9.1
          go get github.com/smallstep/certificates/acme@v0.26.1
          
      - name: Build Caddy
        run: |
          go build -v -o caddy github.com/caddyserver/caddy/v2/cmd/caddy
          
      - name: Tidy modules
        run: go mod tidy

      - name: Build
        run: go build -v ./...

      - name: Test
        id: test
        run: |
           test_output=$(go test -v -count=1 ./... 2>&1)
           echo "test_output<<EOF" >> $GITHUB_STEP_SUMMARY
           echo "$test_output" >> $GITHUB_STEP_SUMMARY
           echo "EOF" >> $GITHUB_STEP_SUMMARY
           
           passed_count=$(echo "$test_output" | grep "PASS:" | wc -l)
           failed_count=$(echo "$test_output" | grep "FAIL:" | wc -l)

           echo "::set-output name=passed::$(echo $passed_count)"
           echo "::set-output name=failed::$(echo $failed_count)"
           
      - name: Test Summary
        if: always()
        run: |
          echo "Test Results:"
          echo "Passed Tests: ${{ steps.test.outputs.passed }}"
          echo "Failed Tests: ${{ steps.test.outputs.failed }}"
      
      - name: Fail if tests failed
        if: steps.test.outputs.failed != '0'
        run: exit 1
